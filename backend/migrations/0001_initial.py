# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-04-06 05:28
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Draft',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[(b'C', b'C'), (b'C++', b'C++'), (b'JAVA', b'Java'), (b'PYTHON', b'Python'), (b'JAVASCRIPT', b'Javascript')], max_length=255)),
                ('sourceCode', models.TextField()),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drafts', to='backend.Candidate')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[(b'ARRAY', b'Array'), (b'LINKED_LIST', b'Linked List')], max_length=255)),
                ('difficulty', models.CharField(choices=[(b'EASY', b'Easy'), (b'MEDIUM', b'Medium'), (b'HARD', b'Hard')], max_length=255)),
                ('timeLimit', models.PositiveIntegerField(default=1, verbose_name=b'TimeLimit')),
                ('memoryLimit', models.PositiveIntegerField(default=262144, verbose_name=b'Memory limit in KB')),
                ('companies', models.ManyToManyField(related_name='problems', to='backend.Company')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[(b'C', b'C'), (b'C++', b'C++'), (b'JAVA', b'Java'), (b'PYTHON', b'Python'), (b'JAVASCRIPT', b'Javascript')], max_length=255)),
                ('header', models.TextField()),
                ('skeleton', models.TextField()),
                ('footer', models.TextField()),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problemFunctions', to='backend.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[(b'C', b'C'), (b'C++', b'C++'), (b'JAVA', b'Java'), (b'PYTHON', b'Python'), (b'JAVASCRIPT', b'Javascript')], max_length=255)),
                ('source', models.TextField(verbose_name=b'source code')),
                ('isSample', models.BooleanField(default=False, verbose_name=b'Compile and run sample tests or not')),
                ('status', models.CharField(choices=[(b'QE', b'Queued'), (b'CE', b'Compilation Error'), (b'AC', b'Correct Answer'), (b'WA', b'Wrong Answer'), (b'TLE', b'Time Limit Exceeded'), (b'MLE', b'Memory Limit Exceeded'), (b'OTHER', b'Reason Not Yet found'), (b'RTE', b'Run Time Error')], default=b'QE', max_length=255, null=True)),
                ('originalCompilerErrorLog', models.TextField(default=None, null=True, verbose_name=b'Compiler log returned from hacker earth api')),
                ('compilerErrorLog', models.TextField(default=None, null=True, verbose_name=b'Compiler log lines modified by our util function')),
                ('timeUsed', models.DecimalField(decimal_places=2, default=0.0, max_digits=2, null=True, verbose_name=b'Time taken by the program')),
                ('memoryUsed', models.PositiveIntegerField(default=0, null=True, verbose_name=b'Memory used by the program in kilo bytes')),
                ('failedCase', models.PositiveIntegerField(default=None, null=True, verbose_name=b'Test Case # failed because of wrong answer')),
                ('expected', models.TextField(default=None, null=True, verbose_name=b'Expected outcome for failed test case')),
                ('obtained', models.TextField(default=None, null=True, verbose_name=b'Obtained outcome for failed test case')),
                ('statusDetail', models.TextField(default=None, null=True, verbose_name=b'Signal like SIGSEGV, NZEC ...')),
                ('stderr', models.TextField(default=None, null=True, verbose_name=b'Stderr used when run time error happens')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='backend.Candidate')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='backend.Problem')),
            ],
        ),
        migrations.AddField(
            model_name='draft',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='draft', to='backend.Problem'),
        ),
        migrations.AlterUniqueTogether(
            name='company',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='college',
            unique_together=set([('name',)]),
        ),
        migrations.AddField(
            model_name='candidate',
            name='college',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='backend.College'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='company',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='backend.Company'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='candidate', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='problemfunction',
            unique_together=set([('problem', 'language')]),
        ),
        migrations.AlterUniqueTogether(
            name='draft',
            unique_together=set([('problem', 'candidate')]),
        ),
    ]
